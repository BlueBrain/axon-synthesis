[core]
logging_conf_file = logging.conf

[Config]
; white_matter_file = /gpfs/bbp.cscs.ch/project/proj83/scratch/home/reimann/rat_wm_recipe_tr_ll_ul_un_n_m_subtract_adjacents.yaml
white_matter_file = /gpfs/bbp.cscs.ch/project/proj83/scratch/home/reimann/white_matter_FULL_RECIPE_v1p20.yaml
atlas_path = /gpfs/bbp.cscs.ch/project/proj82/entities/atlas/ThalNCX/20201019/
; atlas_path = /gpfs/bbp.cscs.ch/project/proj83/data/atlas/S1/MEAN/P14-MEAN

# DiscoverRawData
[CreateDatasetForRepair]
morph_dir = /gpfs/bbp.cscs.ch/project/proj81/InputData/Morphologies/Neurons/Mouse/SSCx/WholeBrain/mouselight_isocortex_ASCII_Files_lite
output_dataset = dataset_for_repair.csv

# Curate and plot raw morphologies
[Curate]
tag_output = False
result_path = out_curated
report_path = report_curation.pdf
nb_processes = 6

[ExtractMarkers]
skip = False

[PlotMarkers]
with_plotly = True
skip = False

[CheckNeurites]
mock_soma_type = spherical
fix_root_sections = True

[Recenter]
skip = True

[DetectErrors]
skip = False
min_range = 50

[PlotErrors]
with_plotly = True
skip = False

[Orient]
pia_direction = y

[Align]
skip = True

[PlotMorphologies]
skip = False
with_plotly = True
with_realistic_diameters = False

# Extract and cluster terminal points
[ExtractTerminals]
output_dataset = terminals.csv

[ClusterTerminals]
output_dataset = clustered_terminals.csv

# Find the targets from white matter
[FindTargetPoints]
; white_matter_file = /gpfs/bbp.cscs.ch/project/proj83/scratch/home/reimann/rat_wm_recipe_tr_ll_ul_un_n_m_subtract_adjacents.yaml
# atlas_path = /gpfs/bbp.cscs.ch/project/proj82/entities/atlas/ThalNCX/20201019/
; atlas_path = /gpfs/bbp.cscs.ch/project/proj83/data/atlas/S1/MEAN/P14-MEAN

# Validate the solutions
[CompareStatistics]
